#!/usr/bin/env bash
#
# Summary: Generate ctags for a given version's standard library
#
# Usage: rbenv ctags <version>
#        rbenv ctags [--all]

shopt -s nullglob

# Provide rbenv completions
if [ "$1" = "--complete" ]; then
  exec rbenv-versions --bare
fi

generate_ctags_in() {
  local tags_file_dir="$1"
  local languages="${2:-Ruby}"
  local source_code_dir="${3:-$tags_file_dir}"
  echo "Running ctags on $source_code_dir"
  if [[ "$languages" == "Ruby" ]] && command -v ripper-tags 2>&1 >/dev/null; then
    (cd "$tags_file_dir"; ripper-tags --recursive --tag-relative=yes "$source_code_dir")
  else
    (cd "$tags_file_dir"; ctags --languages="$languages" --recurse --tag-relative=yes "$source_code_dir")
  fi
}

generate_ctags_for() {
  if [ -w "$1/lib/ruby" ]; then
    for dir in \
      "$1"/lib/ruby/[0-9]* \
      "$1"/lib/ruby/shared*
    do
      generate_ctags_in "$dir"
    done
    for dir in \
      "$1"/lib/ruby/site_ruby/[0-9]* \
      "$1"/lib/ruby/vendor_ruby/[0-9]*
    do
      [ "$(find "$dir" -name '*.rb'|wc -l)" = 0 ] || generate_ctags_in "$dir"
    done
  elif [ -w "$1/lib" ]; then
    generate_ctags_in "$1/lib"
  else
    echo "No directories for ctags found in $1" >&2
    return 1
  fi

  local ruby_include_dir="$(RBENV_VERSION=$version rbenv-exec ruby -rrbconfig -e 'print RbConfig::CONFIG["rubyhdrdir"] || RbConfig::CONFIG["topdir"]')"
  if [ -w "$ruby_include_dir" ]; then
    generate_ctags_in "$ruby_include_dir" "C,C++" "${RUBY_BUILD_BUILD_PATH:-$ruby_include_dir}"
  else
    echo "No Ruby include directory for ctags found in $1" >&2
    return 1
  fi
}

if [ $# = 0 -o --all = "$1" ]; then
  for version in $(rbenv-versions --bare); do
    [ -L "$(rbenv-prefix "$version")" ] || \
      generate_ctags_for "$(rbenv-prefix "$version")"
  done
else
  for version in "$@"; do
    generate_ctags_for "$(rbenv-prefix "$version")"
  done
fi
